syntax = "proto3";
package althea.microtx.v1;

option go_package = "github.com/AltheaFoundation/althea-L1/x/microtx/types";

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

// Params struct
message Params {
    option (gogoproto.goproto_stringer) = false;
    uint64 microtx_fee_basis_points = 1;
    string base_proposer_reward = 2 [
        (cosmos_proto.scalar)  = "cosmos.Dec",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
    ];
    string bonus_proposer_reward = 3 [
        (cosmos_proto.scalar)  = "cosmos.Dec",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
    ];
}

message GenesisState {
    Params params = 1;
    // previous_proposer defines the previous proposer at genesis as a bech32 encoded AccAddress (cosmos1...)
    string previous_proposer = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}