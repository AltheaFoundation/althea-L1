syntax = "proto3";
package microtx.v1;
import "microtx/v1/genesis.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
option go_package = "github.com/althea-net/althea-chain/x/microtx/types";

// Query defines the possible queries to make of the microtx module
service Query {
  // Query the current microtx params
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/microtx/v1/params";
  }
  // Get an authoritative fee amount which must be paid on Xfer
  rpc XferFee(QueryXferFeeRequest) returns (QueryXferFeeResponse) {
    option (google.api.http).get = "/microtx/v1/xfer_fee";
  }
}

// Query the current microtx params
message QueryParamsRequest {}
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// Query the additional fee paid on MsgXfer, determined by governance
message QueryXferFeeRequest {
  uint64 amount = 1;
}
message QueryXferFeeResponse {
  uint64 fee_amount = 1;
}
